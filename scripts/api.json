{
    "openapi" : "3.0.3",
    "info" : {
      "title" : "Schedge",
      "description" : "  Schedge is an API to NYU's course catalog. Please note that\n  <b>this API is a beta build currently under development</b>.\n  This means that changes to the API are possible, but practically\n  speaking, the API surface has been stable for over a year now.\n  <br /><br />\n  If you'd like to contribute,\n  <a href=\"https://github.com/A1Liu/schedge\">check out the repository</a>.\n  <br /> <br />\n  <b><big>Build version:\n  <a href=\"https://github.com/A1Liu/schedge/tree/72d6d88\">72d6d88</a>.\n  </big></b>\n",
      "version" : "2.0.0 beta"
    },
    "paths" : {
      "/api/campus" : {
        "get" : {
          "tags" : [ ],
          "summary" : "Campuses",
          "description" : "Lists all campuses that Schedge is currently aware of.",
          "parameters" : [ ],
          "responses" : {
            "200" : {
              "description" : "Success. Lists out campuses",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/Data"
                  }
                }
              }
            },
            "400" : {
              "description" : "One of the values in the path parameter was not valid.",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/ApiError"
                  }
                }
              }
            }
          },
          "deprecated" : false,
          "security" : [ ]
        }
      },
      "/api/courses/{term}/{subject}" : {
        "get" : {
          "tags" : [ ],
          "summary" : "Courses",
          "description" : "Lists all courses for a specific semester and subject.",
          "parameters" : [ {
            "name" : "subject",
            "in" : "path",
            "description" : "Must be a valid subject code. Take a look at the docs for the schools endpoint for more information.",
            "required" : true,
            "deprecated" : false,
            "allowEmptyValue" : false,
            "schema" : {
              "type" : "string",
              "example" : "MATH-UA"
            }
          }, {
            "name" : "term",
            "in" : "path",
            "description" : "Must be a valid term code, either 'current', 'next', or something like sp2021 for Spring 2021. Use 'su' for Summer, 'sp' for Spring, 'fa' for Fall, and 'ja' for January/JTerm",
            "required" : true,
            "deprecated" : false,
            "allowEmptyValue" : false,
            "schema" : {
              "type" : "string",
              "example" : "fa2022"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "Status of the executed command",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/Course"
                    }
                  }
                }
              }
            },
            "400" : {
              "description" : "One of the values in the path parameter was not valid.",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/ApiError"
                  }
                }
              }
            }
          },
          "deprecated" : false,
          "security" : [ ]
        }
      },
      "/api/schools/{term}" : {
        "get" : {
          "tags" : [ ],
          "summary" : "School Info",
          "description" : "This endpoint provides general information on the subjects in a term",
          "parameters" : [ {
            "name" : "term",
            "in" : "path",
            "description" : "Must be a valid term code, either 'current', 'next', or something like sp2021 for Spring 2021. Use 'su' for Summer, 'sp' for Spring, 'fa' for Fall, and 'ja' for January/JTerm",
            "required" : true,
            "deprecated" : false,
            "allowEmptyValue" : false,
            "schema" : {
              "type" : "string",
              "example" : "fa2022"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "School information",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/Info"
                  }
                }
              }
            },
            "400" : {
              "description" : "One of the values in the path parameter was not valid.",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/ApiError"
                  }
                }
              }
            }
          },
          "deprecated" : false,
          "security" : [ ]
        }
      },
      "/api/search/{term}" : {
        "get" : {
          "tags" : [ ],
          "summary" : "Search",
          "description" : "This endpoint returns a list of courses for a year and semester, given search terms.",
          "parameters" : [ {
            "name" : "term",
            "in" : "path",
            "description" : "Must be a valid term code, either 'current', 'next', or something like sp2021 for Spring 2021. Use 'su' for Summer, 'sp' for Spring, 'fa' for Fall, and 'ja' for January/JTerm",
            "required" : true,
            "deprecated" : false,
            "allowEmptyValue" : false,
            "schema" : {
              "type" : "string",
              "example" : "fa2022"
            }
          }, {
            "name" : "query",
            "in" : "query",
            "description" : "Query string created by the user",
            "required" : true,
            "deprecated" : false,
            "allowEmptyValue" : false,
            "schema" : {
              "type" : "string",
              "example" : "Linear algebra"
            }
          }, {
            "name" : "limit",
            "in" : "query",
            "description" : "Maximum number of courses in the result. Defaults to 20, and is capped at 50.",
            "required" : false,
            "deprecated" : false,
            "allowEmptyValue" : false,
            "schema" : {
              "type" : "integer",
              "format" : "int32",
              "example" : "20"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "Search results",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/Course"
                    }
                  }
                }
              }
            },
            "400" : {
              "description" : "Didn't provide a query, or the path param was an invalid term.",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/ApiError"
                  }
                }
              }
            }
          },
          "deprecated" : false,
          "security" : [ ]
        }
      },
      "/api/terms" : {
        "get" : {
          "tags" : [ ],
          "summary" : "Terms List",
          "description" : "This endpoint provides a list of terms that Schedge has data for",
          "parameters" : [ ],
          "responses" : {
            "200" : {
              "description" : "List of terms",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "400" : {
              "description" : "One of the values in the path parameter was not valid.",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/ApiError"
                  }
                }
              }
            }
          },
          "deprecated" : false,
          "security" : [ ]
        }
      },
      "/generateSchedule/{term}" : {
        "get" : {
          "tags" : [ ],
          "summary" : "Scheduler",
          "description" : "This endpoint returns either an ordered schedule, or a pair 'conflictA' and 'conflictB'. You can use the 'valid' field to check whether the schedule is valid.",
          "parameters" : [ {
            "name" : "term",
            "in" : "path",
            "description" : "Must be a valid term code, either 'current', 'next', or something like sp2021 for Spring 2021. Use 'su' for Summer, 'sp' for Spring, 'fa' for Fall, and 'ja' for January/JTerm",
            "required" : true,
            "deprecated" : false,
            "allowEmptyValue" : false,
            "schema" : {
              "type" : "string",
              "example" : "fa2022"
            }
          }, {
            "name" : "registrationNumbers",
            "in" : "query",
            "description" : "Comma-separated registration numbers",
            "required" : true,
            "deprecated" : false,
            "allowEmptyValue" : false,
            "schema" : {
              "type" : "string",
              "example" : "23069,7626"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "Schedule created for the provided courses; when valid = true, shows a calendar view with the fields mo,tu,we,th,fr,sa,su. when valid = false, shows the problematic scheduling conflict: conflictA and conflictB.",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/Schedule"
                  }
                }
              }
            },
            "400" : {
              "description" : "One of the values in the path parameter was not valid.",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/ApiError"
                  }
                }
              }
            }
          },
          "deprecated" : false,
          "security" : [ ]
        }
      },
      "/stat" : {
        "get" : {
          "tags" : [ ],
          "summary" : "Health",
          "description" : "This endpoint provides information on the health of the Runtime Environment. Currently very incomplete.",
          "parameters" : [ ],
          "responses" : {
            "200" : {
              "description" : "OK.",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/HealthInfo"
                  }
                }
              }
            },
            "400" : {
              "description" : "Something's messed up with the server",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/ApiError"
                  }
                }
              }
            }
          },
          "deprecated" : false,
          "security" : [ ]
        }
      }
    },
    "components" : {
      "schemas" : {
        "Schedule" : {
          "type" : "object",
          "additionalProperties" : false,
          "properties" : {
            "valid" : {
              "type" : "boolean"
            },
            "mo" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/AugmentedMeeting"
              }
            },
            "tu" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/AugmentedMeeting"
              }
            },
            "we" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/AugmentedMeeting"
              }
            },
            "th" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/AugmentedMeeting"
              }
            },
            "fr" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/AugmentedMeeting"
              }
            },
            "sa" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/AugmentedMeeting"
              }
            },
            "su" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/AugmentedMeeting"
              }
            },
            "conflictA" : {
              "$ref" : "#/components/schemas/AugmentedMeeting"
            },
            "conflictB" : {
              "$ref" : "#/components/schemas/AugmentedMeeting"
            }
          },
          "required" : [ "valid", "mo", "tu", "we", "th", "fr", "sa", "su" ]
        },
        "ApiError" : {
          "type" : "object",
          "additionalProperties" : false,
          "properties" : {
            "status" : {
              "type" : "integer",
              "format" : "int32"
            },
            "message" : {
              "type" : "string"
            }
          },
          "required" : [ "status" ]
        },
        "Data" : {
          "type" : "object",
          "additionalProperties" : false,
          "properties" : {
            "campuses" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/Campus"
              }
            }
          }
        },
        "HealthInfo" : {
          "type" : "object",
          "additionalProperties" : false,
          "properties" : {
            "alive" : {
              "type" : "boolean"
            },
            "version" : {
              "type" : "string"
            }
          },
          "required" : [ "alive", "version" ]
        },
        "Info" : {
          "type" : "object",
          "additionalProperties" : false,
          "properties" : { }
        },
        "AugmentedMeeting" : {
          "type" : "object",
          "additionalProperties" : false,
          "properties" : {
            "subject" : {
              "type" : "string"
            },
            "deptCourseId" : {
              "type" : "string"
            },
            "campus" : {
              "type" : "string"
            },
            "sectionCode" : {
              "type" : "string"
            },
            "registrationNumber" : {
              "type" : "integer",
              "format" : "int32"
            },
            "sectionType" : {
              "type" : "string"
            },
            "sectionStatus" : {
              "type" : "string"
            },
            "instructionMode" : {
              "type" : "string"
            },
            "location" : {
              "type" : "string"
            },
            "beginDate" : {
              "type" : "string"
            },
            "endDate" : {
              "type" : "string"
            },
            "beginDateLocal" : {
              "type" : "string"
            },
            "endDateLocal" : {
              "type" : "string"
            },
            "minutesDuration" : {
              "type" : "integer",
              "format" : "int32"
            },
            "minutesInDay" : {
              "type" : "integer",
              "format" : "int32"
            }
          },
          "required" : [ "registrationNumber", "beginDate", "endDate", "beginDateLocal", "endDateLocal", "minutesDuration", "minutesInDay" ]
        },
        "Campus" : {
          "type" : "object",
          "additionalProperties" : false,
          "properties" : {
            "name" : {
              "type" : "string",
              "example" : "NYU Accra (Global)"
            },
            "timezoneId" : {
              "type" : "string",
              "example" : "Africa/Accra"
            },
            "timezoneName" : {
              "type" : "string",
              "example" : "Ghana Mean Time"
            }
          },
          "required" : [ "name", "timezoneId", "timezoneName" ]
        },
        "Course" : {
          "type" : "object",
          "additionalProperties" : false,
          "properties" : {
            "name" : {
              "type" : "string"
            },
            "deptCourseId" : {
              "type" : "string"
            },
            "description" : {
              "type" : "string"
            },
            "sections" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/Section"
              }
            },
            "subjectCode" : {
              "type" : "string",
              "example" : "CSCI-UA"
            }
          }
        },
        "Section" : {
          "type" : "object",
          "additionalProperties" : false,
          "properties" : {
            "registrationNumber" : {
              "type" : "integer",
              "format" : "int32"
            },
            "name" : {
              "type" : "string",
              "example" : "Topic: Natual Language Processing"
            },
            "code" : {
              "type" : "string"
            },
            "instructors" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "type" : {
              "type" : "string"
            },
            "status" : {
              "type" : "string"
            },
            "campus" : {
              "type" : "string"
            },
            "meetings" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/ZonedMeeting"
              }
            },
            "instructionMode" : {
              "type" : "string"
            },
            "minUnits" : {
              "type" : "number",
              "format" : "double"
            },
            "maxUnits" : {
              "type" : "number",
              "format" : "double"
            },
            "grading" : {
              "type" : "string"
            },
            "location" : {
              "type" : "string"
            },
            "notes" : {
              "type" : "string"
            },
            "recitations" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/Section"
              }
            },
            "waitlistTotal" : {
              "type" : "integer",
              "format" : "int32"
            }
          },
          "required" : [ "registrationNumber", "code", "type" ]
        },
        "ZonedMeeting" : {
          "type" : "object",
          "additionalProperties" : false,
          "properties" : {
            "minutesDuration" : {
              "type" : "integer",
              "format" : "int32"
            },
            "beginDate" : {
              "type" : "string"
            },
            "beginDateLocal" : {
              "type" : "string"
            },
            "endDate" : {
              "type" : "string"
            },
            "endDateLocal" : {
              "type" : "string"
            }
          },
          "required" : [ "minutesDuration", "beginDate", "beginDateLocal", "endDate", "endDateLocal" ]
        }
      },
      "securitySchemes" : { }
    },
    "servers" : [ ],
    "security" : null
  }