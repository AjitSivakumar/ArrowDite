Course Name,Department Course ID,Description,Section Name,Section Type,Registration Number,Instructors,Campus,Location
"Algebra, Trigonometry, and Functions",9,"Serves as preparation for students who do not otherwise place into Discrete Mathematics (MATH-UA 120), Calculus I (MATH-UA 121), Mathematics for Economics I (MATH-UA 131; formerly MATH-UA 211), Linear Algebra (MATH-UA 140), Honors Linear Algebra (MATH-UA 148; an A- in MATH-UA 9 is required to enter MATH-UA 148), and some courses in other departments (such as chemistry and economics). Intermediate algebra and trigonometry; algebraic, exponential, logarithmic, and trigonometric functions and their graphs. ",,Lecture,8052,"Mavroyiakoumou, Christiana",Washington Square,19W4 101
"Algebra, Trigonometry, and Functions",9,"Serves as preparation for students who do not otherwise place into Discrete Mathematics (MATH-UA 120), Calculus I (MATH-UA 121), Mathematics for Economics I (MATH-UA 131; formerly MATH-UA 211), Linear Algebra (MATH-UA 140), Honors Linear Algebra (MATH-UA 148; an A- in MATH-UA 9 is required to enter MATH-UA 148), and some courses in other departments (such as chemistry and economics). Intermediate algebra and trigonometry; algebraic, exponential, logarithmic, and trigonometric functions and their graphs. ",,Lecture,8057,"Flek, Ruslan",Washington Square,SILV 207
"Algebra, Trigonometry, and Functions",9,"Serves as preparation for students who do not otherwise place into Discrete Mathematics (MATH-UA 120), Calculus I (MATH-UA 121), Mathematics for Economics I (MATH-UA 131; formerly MATH-UA 211), Linear Algebra (MATH-UA 140), Honors Linear Algebra (MATH-UA 148; an A- in MATH-UA 9 is required to enter MATH-UA 148), and some courses in other departments (such as chemistry and economics). Intermediate algebra and trigonometry; algebraic, exponential, logarithmic, and trigonometric functions and their graphs. ",,Lecture,8062,"Flek, Ruslan",Washington Square,ONLI
"Algebra, Trigonometry, and Functions",9,"Serves as preparation for students who do not otherwise place into Discrete Mathematics (MATH-UA 120), Calculus I (MATH-UA 121), Mathematics for Economics I (MATH-UA 131; formerly MATH-UA 211), Linear Algebra (MATH-UA 140), Honors Linear Algebra (MATH-UA 148; an A- in MATH-UA 9 is required to enter MATH-UA 148), and some courses in other departments (such as chemistry and economics). Intermediate algebra and trigonometry; algebraic, exponential, logarithmic, and trigonometric functions and their graphs. ",,Lecture,26466,"Stepp, Elizabeth",Washington Square,ONLI
Discrete Mathematics,120,"A first course in discrete mathematics. Sets, algorithms, and induction. Combinatorics. Graphs and trees. Combinatorial circuits. Logic and Boolean algebra.",,Lecture,8067,"Wang, Victor",Washington Square,194M 203
Discrete Mathematics,120,"A first course in discrete mathematics. Sets, algorithms, and induction. Combinatorics. Graphs and trees. Combinatorial circuits. Logic and Boolean algebra.",,Lecture,8068,"Leingang, Matthew",Washington Square,194M 203
Discrete Mathematics,120,"A first course in discrete mathematics. Sets, algorithms, and induction. Combinatorics. Graphs and trees. Combinatorial circuits. Logic and Boolean algebra.",,Lecture,8380,"Chikhany, Ralph",Washington Square,194M 203
Discrete Mathematics,120,"A first course in discrete mathematics. Sets, algorithms, and induction. Combinatorics. Graphs and trees. Combinatorial circuits. Logic and Boolean algebra.",,Lecture,8563,"Shum, Fanny",Washington Square,194M 203
Discrete Mathematics,120,"A first course in discrete mathematics. Sets, algorithms, and induction. Combinatorics. Graphs and trees. Combinatorial circuits. Logic and Boolean algebra.",,Lecture,8707,"Divol, Vincent",Washington Square,194M 203
Discrete Mathematics,120,"A first course in discrete mathematics. Sets, algorithms, and induction. Combinatorics. Graphs and trees. Combinatorial circuits. Logic and Boolean algebra.",,Lecture,8883,"Shum, Fanny",Washington Square,194M 203
Discrete Mathematics,120,"A first course in discrete mathematics. Sets, algorithms, and induction. Combinatorics. Graphs and trees. Combinatorial circuits. Logic and Boolean algebra.",,Lecture,8986,"Antonelli, Gioacchino",Washington Square,194M 203
Discrete Mathematics,120,"A first course in discrete mathematics. Sets, algorithms, and induction. Combinatorics. Graphs and trees. Combinatorial circuits. Logic and Boolean algebra.",,Lecture,9360,"McSwiggen, Colin",Washington Square,194M 203
Discrete Mathematics,120,"A first course in discrete mathematics. Sets, algorithms, and induction. Combinatorics. Graphs and trees. Combinatorial circuits. Logic and Boolean algebra.",,Lecture,10409,"Morrison, Megan",Washington Square,CIWW 201
Calculus I,121,"Any one of the following: a score of 670 or higher on the mathematics portion of the SAT, a score of 650 or higher on the SAT Subject Test in Mathematics 1, a score of 650 or higher on the SAT Subject Test in Mathematics 2, an ACT mathematics score of 30 or higher, a score of 3 or higher on the AP Calculus AB exam, an AB subscore of 3 or higher on the AP Calculus BC exam, a score of 3 or higher on the AP Calculus BC exam, a grade of C or higher in Algebra and Calculus (MATH-UA 9), or a passing score on a departmental placement exam. Derivatives, antiderivatives, and integrals of functions of one variable. Applications include graphing, maximizing, and minimizing functions. Definite integrals and the fundamental theorem of calculus. Areas and volumes. ",,Lecture,8069,"Liu, Shizhu",Washington Square,ONLI
Calculus I,121,"Any one of the following: a score of 670 or higher on the mathematics portion of the SAT, a score of 650 or higher on the SAT Subject Test in Mathematics 1, a score of 650 or higher on the SAT Subject Test in Mathematics 2, an ACT mathematics score of 30 or higher, a score of 3 or higher on the AP Calculus AB exam, an AB subscore of 3 or higher on the AP Calculus BC exam, a score of 3 or higher on the AP Calculus BC exam, a grade of C or higher in Algebra and Calculus (MATH-UA 9), or a passing score on a departmental placement exam. Derivatives, antiderivatives, and integrals of functions of one variable. Applications include graphing, maximizing, and minimizing functions. Definite integrals and the fundamental theorem of calculus. Areas and volumes. ",,Lecture,8074,"Sia, Charmaine",Washington Square,5WP 101
Calculus I,121,"Any one of the following: a score of 670 or higher on the mathematics portion of the SAT, a score of 650 or higher on the SAT Subject Test in Mathematics 1, a score of 650 or higher on the SAT Subject Test in Mathematics 2, an ACT mathematics score of 30 or higher, a score of 3 or higher on the AP Calculus AB exam, an AB subscore of 3 or higher on the AP Calculus BC exam, a score of 3 or higher on the AP Calculus BC exam, a grade of C or higher in Algebra and Calculus (MATH-UA 9), or a passing score on a departmental placement exam. Derivatives, antiderivatives, and integrals of functions of one variable. Applications include graphing, maximizing, and minimizing functions. Definite integrals and the fundamental theorem of calculus. Areas and volumes. ",,Lecture,8079,"Espinosa, Silvia",Washington Square,CIWW 109
Calculus I,121,"Any one of the following: a score of 670 or higher on the mathematics portion of the SAT, a score of 650 or higher on the SAT Subject Test in Mathematics 1, a score of 650 or higher on the SAT Subject Test in Mathematics 2, an ACT mathematics score of 30 or higher, a score of 3 or higher on the AP Calculus AB exam, an AB subscore of 3 or higher on the AP Calculus BC exam, a score of 3 or higher on the AP Calculus BC exam, a grade of C or higher in Algebra and Calculus (MATH-UA 9), or a passing score on a departmental placement exam. Derivatives, antiderivatives, and integrals of functions of one variable. Applications include graphing, maximizing, and minimizing functions. Definite integrals and the fundamental theorem of calculus. Areas and volumes. ",,Lecture,8084,"Espinosa, Silvia",Washington Square,CIWW 109
Calculus I,121,"Any one of the following: a score of 670 or higher on the mathematics portion of the SAT, a score of 650 or higher on the SAT Subject Test in Mathematics 1, a score of 650 or higher on the SAT Subject Test in Mathematics 2, an ACT mathematics score of 30 or higher, a score of 3 or higher on the AP Calculus AB exam, an AB subscore of 3 or higher on the AP Calculus BC exam, a score of 3 or higher on the AP Calculus BC exam, a grade of C or higher in Algebra and Calculus (MATH-UA 9), or a passing score on a departmental placement exam. Derivatives, antiderivatives, and integrals of functions of one variable. Applications include graphing, maximizing, and minimizing functions. Definite integrals and the fundamental theorem of calculus. Areas and volumes. ",,Lecture,8089,"Shum, Fanny",Washington Square,CIWW 109
Calculus I,121,"Any one of the following: a score of 670 or higher on the mathematics portion of the SAT, a score of 650 or higher on the SAT Subject Test in Mathematics 1, a score of 650 or higher on the SAT Subject Test in Mathematics 2, an ACT mathematics score of 30 or higher, a score of 3 or higher on the AP Calculus AB exam, an AB subscore of 3 or higher on the AP Calculus BC exam, a score of 3 or higher on the AP Calculus BC exam, a grade of C or higher in Algebra and Calculus (MATH-UA 9), or a passing score on a departmental placement exam. Derivatives, antiderivatives, and integrals of functions of one variable. Applications include graphing, maximizing, and minimizing functions. Definite integrals and the fundamental theorem of calculus. Areas and volumes. ",,Lecture,8092,"Feklistova, Mariya",Washington Square,SILV 207
Calculus I,121,"Any one of the following: a score of 670 or higher on the mathematics portion of the SAT, a score of 650 or higher on the SAT Subject Test in Mathematics 1, a score of 650 or higher on the SAT Subject Test in Mathematics 2, an ACT mathematics score of 30 or higher, a score of 3 or higher on the AP Calculus AB exam, an AB subscore of 3 or higher on the AP Calculus BC exam, a score of 3 or higher on the AP Calculus BC exam, a grade of C or higher in Algebra and Calculus (MATH-UA 9), or a passing score on a departmental placement exam. Derivatives, antiderivatives, and integrals of functions of one variable. Applications include graphing, maximizing, and minimizing functions. Definite integrals and the fundamental theorem of calculus. Areas and volumes. ",,Lecture,8094,"Foster, Joseph",Washington Square,5WP 101
Calculus I,121,"Any one of the following: a score of 670 or higher on the mathematics portion of the SAT, a score of 650 or higher on the SAT Subject Test in Mathematics 1, a score of 650 or higher on the SAT Subject Test in Mathematics 2, an ACT mathematics score of 30 or higher, a score of 3 or higher on the AP Calculus AB exam, an AB subscore of 3 or higher on the AP Calculus BC exam, a score of 3 or higher on the AP Calculus BC exam, a grade of C or higher in Algebra and Calculus (MATH-UA 9), or a passing score on a departmental placement exam. Derivatives, antiderivatives, and integrals of functions of one variable. Applications include graphing, maximizing, and minimizing functions. Definite integrals and the fundamental theorem of calculus. Areas and volumes. ",,Lecture,8096,"Flek, Ruslan",Washington Square,5WP 101
Calculus I,121,"Any one of the following: a score of 670 or higher on the mathematics portion of the SAT, a score of 650 or higher on the SAT Subject Test in Mathematics 1, a score of 650 or higher on the SAT Subject Test in Mathematics 2, an ACT mathematics score of 30 or higher, a score of 3 or higher on the AP Calculus AB exam, an AB subscore of 3 or higher on the AP Calculus BC exam, a score of 3 or higher on the AP Calculus BC exam, a grade of C or higher in Algebra and Calculus (MATH-UA 9), or a passing score on a departmental placement exam. Derivatives, antiderivatives, and integrals of functions of one variable. Applications include graphing, maximizing, and minimizing functions. Definite integrals and the fundamental theorem of calculus. Areas and volumes. ",,Lecture,8100,"Sanfratello, Andrew",Washington Square,5WP 101
Calculus I,121,"Any one of the following: a score of 670 or higher on the mathematics portion of the SAT, a score of 650 or higher on the SAT Subject Test in Mathematics 1, a score of 650 or higher on the SAT Subject Test in Mathematics 2, an ACT mathematics score of 30 or higher, a score of 3 or higher on the AP Calculus AB exam, an AB subscore of 3 or higher on the AP Calculus BC exam, a score of 3 or higher on the AP Calculus BC exam, a grade of C or higher in Algebra and Calculus (MATH-UA 9), or a passing score on a departmental placement exam. Derivatives, antiderivatives, and integrals of functions of one variable. Applications include graphing, maximizing, and minimizing functions. Definite integrals and the fundamental theorem of calculus. Areas and volumes. ",,Lecture,8381,"Stepp, Elizabeth",Washington Square,ONLI
Calculus II,122,"Techniques of integration. Further applications. Plane analytic geometry. Polar coordinates and parametric equations. Infinite series, including power series.",,Lecture,8105,"Kalaycioglu, Selin",Washington Square,ONLI
Calculus II,122,"Techniques of integration. Further applications. Plane analytic geometry. Polar coordinates and parametric equations. Infinite series, including power series.",,Lecture,8106,"Kalaycioglu, Selin",Washington Square,194M 204
Calculus II,122,"Techniques of integration. Further applications. Plane analytic geometry. Polar coordinates and parametric equations. Infinite series, including power series.",,Lecture,8107,"Foster, Joseph",Washington Square,194M 203
Calculus II,122,"Techniques of integration. Further applications. Plane analytic geometry. Polar coordinates and parametric equations. Infinite series, including power series.",,Lecture,8108,"Foster, Joseph",Washington Square,194M 206
Calculus II,122,"Techniques of integration. Further applications. Plane analytic geometry. Polar coordinates and parametric equations. Infinite series, including power series.",,Lecture,8109,"Burkhardt-Guim, Paula",Washington Square,194M 204
Calculus II,122,"Techniques of integration. Further applications. Plane analytic geometry. Polar coordinates and parametric equations. Infinite series, including power series.",,Lecture,8110,"Oveys, Hesam",Washington Square,194M 204
Calculus II,122,"Techniques of integration. Further applications. Plane analytic geometry. Polar coordinates and parametric equations. Infinite series, including power series.",,Lecture,8111,"Oveys, Hesam",Washington Square,194M 204
Calculus II,122,"Techniques of integration. Further applications. Plane analytic geometry. Polar coordinates and parametric equations. Infinite series, including power series.",,Lecture,8112,"Normand, Raoul Justin",Washington Square,194M 204
Calculus III,123,"Prerequisite: MATH-UA.0122 with a grade of C or better, departmental placement exam, or permission of the department. Functions of several variables. Vectors in the plane and space. Partial derivatives with applications. Double and triple integrals. Spherical and cylindrical coordinates. Surface and line integrals. Divergence, gradient, and curl. Theorem of Gauss and Stokes.",,Lecture,8113,"Liu, Shizhu",Washington Square,194M 204
Calculus III,123,"Prerequisite: MATH-UA.0122 with a grade of C or better, departmental placement exam, or permission of the department. Functions of several variables. Vectors in the plane and space. Partial derivatives with applications. Double and triple integrals. Spherical and cylindrical coordinates. Surface and line integrals. Divergence, gradient, and curl. Theorem of Gauss and Stokes.",,Lecture,8114,"Sia, Charmaine",Washington Square,194M 206
Calculus III,123,"Prerequisite: MATH-UA.0122 with a grade of C or better, departmental placement exam, or permission of the department. Functions of several variables. Vectors in the plane and space. Partial derivatives with applications. Double and triple integrals. Spherical and cylindrical coordinates. Surface and line integrals. Divergence, gradient, and curl. Theorem of Gauss and Stokes.",,Lecture,8115,"Leingang, Matthew",Washington Square,194M 204
Calculus III,123,"Prerequisite: MATH-UA.0122 with a grade of C or better, departmental placement exam, or permission of the department. Functions of several variables. Vectors in the plane and space. Partial derivatives with applications. Double and triple integrals. Spherical and cylindrical coordinates. Surface and line integrals. Divergence, gradient, and curl. Theorem of Gauss and Stokes.",,Lecture,8116,"Sia, Charmaine",Washington Square,194M 204
Calculus III,123,"Prerequisite: MATH-UA.0122 with a grade of C or better, departmental placement exam, or permission of the department. Functions of several variables. Vectors in the plane and space. Partial derivatives with applications. Double and triple integrals. Spherical and cylindrical coordinates. Surface and line integrals. Divergence, gradient, and curl. Theorem of Gauss and Stokes.",,Lecture,9212,"Damarackas, Julius",Washington Square,194M 206
Calculus III,123,"Prerequisite: MATH-UA.0122 with a grade of C or better, departmental placement exam, or permission of the department. Functions of several variables. Vectors in the plane and space. Partial derivatives with applications. Double and triple integrals. Spherical and cylindrical coordinates. Surface and line integrals. Divergence, gradient, and curl. Theorem of Gauss and Stokes.",,Lecture,8574,"Damarackas, Julius",Washington Square,194M 206
Calculus III,123,"Prerequisite: MATH-UA.0122 with a grade of C or better, departmental placement exam, or permission of the department. Functions of several variables. Vectors in the plane and space. Partial derivatives with applications. Double and triple integrals. Spherical and cylindrical coordinates. Surface and line integrals. Divergence, gradient, and curl. Theorem of Gauss and Stokes.",,Lecture,8708,"Stein, Daniel",Washington Square,194M 206
Honors Calculus III,129,"The scope of this honors class will include the usual MATH-UA 123 syllabus; however this class will move faster, covering additional topics and going deeper. Functions of several variables. Vectors in the plane and space. Partial derivatives with applications, especially Lagrange multipliers. Double and triple integrals. Spherical and cylindrical coordinates. Surface and line integrals. Divergence, gradient, and curl. Theorem of Gauss and Stokes.",,Lecture,9137,"Boury, Samuel",Washington Square,194M 203
Mathematics for Economics I,131,Formerly numbered MATH-UA 211; the content has not changed. Will only count toward the major in mathematics for: economics majors with a double or joint major in math. Elements of calculus and linear algebra are important to the study of economics. This class is designed to provide the appropriate tools for study in the policy concentration. Examples and motivation are drawn from important topics in economics. Topics covered include derivatives of functions of one and several variables; interpretations of the derivatives; convexity; constrained and unconstrained optimization.,,Lecture,8446,"King, Darren",Washington Square,ONLI
Mathematics for Economics I,131,Formerly numbered MATH-UA 211; the content has not changed. Will only count toward the major in mathematics for: economics majors with a double or joint major in math. Elements of calculus and linear algebra are important to the study of economics. This class is designed to provide the appropriate tools for study in the policy concentration. Examples and motivation are drawn from important topics in economics. Topics covered include derivatives of functions of one and several variables; interpretations of the derivatives; convexity; constrained and unconstrained optimization.,,Lecture,8569,"Chikhany, Ralph",Washington Square,19W4 101
Mathematics for Economics I,131,Formerly numbered MATH-UA 211; the content has not changed. Will only count toward the major in mathematics for: economics majors with a double or joint major in math. Elements of calculus and linear algebra are important to the study of economics. This class is designed to provide the appropriate tools for study in the policy concentration. Examples and motivation are drawn from important topics in economics. Topics covered include derivatives of functions of one and several variables; interpretations of the derivatives; convexity; constrained and unconstrained optimization.,,Lecture,8650,"Normand, Raoul Justin",Washington Square,MEYR 121
Mathematics for Economics I,131,Formerly numbered MATH-UA 211; the content has not changed. Will only count toward the major in mathematics for: economics majors with a double or joint major in math. Elements of calculus and linear algebra are important to the study of economics. This class is designed to provide the appropriate tools for study in the policy concentration. Examples and motivation are drawn from important topics in economics. Topics covered include derivatives of functions of one and several variables; interpretations of the derivatives; convexity; constrained and unconstrained optimization.,,Lecture,8666,"Normand, Raoul Justin",Washington Square,5WP 101
Mathematics for Economics II,132,"Formerly numbered MATH-UA 212; the content has not changed. Not open to students who already have credit for Calculus (from an NYU or transfer course, or from AP or another accepted exam), unless they have declared or will declare a major in economics. A continuation of Mathematics for Economics I. Matrix algebra; eigenvalues; Ordinary differential equations and stability analysis, multivariable integration and (possibly) dynamic optimization.",,Lecture,8501,"Chikhany, Ralph",Washington Square,CIWW 109
Mathematics for Economics II,132,"Formerly numbered MATH-UA 212; the content has not changed. Not open to students who already have credit for Calculus (from an NYU or transfer course, or from AP or another accepted exam), unless they have declared or will declare a major in economics. A continuation of Mathematics for Economics I. Matrix algebra; eigenvalues; Ordinary differential equations and stability analysis, multivariable integration and (possibly) dynamic optimization.",,Lecture,8567,"Damarackas, Julius",Washington Square,SILV 207
Mathematics for Economics III,133,"Formerly numbered MATH-UA 213; the content has not changed. Further topics in vector calculus. Vector spaces, matrix analysis. Linear and nonlinear programming with applications to game theory. This course will provide economics students who have taken MATH-UA 131 Mathematics for Economics I (formerly MATH-UA 211) and MATH-UA 132 Mathematics for Economics II (formerly MATH-UA 212) with the tools to take higher-level mathematics courses.",,Lecture,8636,"Garcia, Fortino",Washington Square,SILV 207
Linear Algebra,140,"Systems of linear equations. Gaussian elimination, matrices, determinants, and Cramer?s rule. Vectors, vector spaces, basis and dimension, linear transformations. Eigenvalues, eigenvectors, quadratic forms.",,Lecture,8117,"Majmudar, Trushant",Washington Square,SILV 207
Linear Algebra,140,"Systems of linear equations. Gaussian elimination, matrices, determinants, and Cramer?s rule. Vectors, vector spaces, basis and dimension, linear transformations. Eigenvalues, eigenvectors, quadratic forms.",,Lecture,8122,"Sanfratello, Andrew",Washington Square,ONLI
Linear Algebra,140,"Systems of linear equations. Gaussian elimination, matrices, determinants, and Cramer?s rule. Vectors, vector spaces, basis and dimension, linear transformations. Eigenvalues, eigenvectors, quadratic forms.",,Lecture,9362,"Majmudar, Trushant",Washington Square,MEYR 121
Linear Algebra,140,"Systems of linear equations. Gaussian elimination, matrices, determinants, and Cramer?s rule. Vectors, vector spaces, basis and dimension, linear transformations. Eigenvalues, eigenvectors, quadratic forms.",,Lecture,9421,"Sanfratello, Andrew",Washington Square,5WP 101
Linear Algebra,140,"Systems of linear equations. Gaussian elimination, matrices, determinants, and Cramer?s rule. Vectors, vector spaces, basis and dimension, linear transformations. Eigenvalues, eigenvectors, quadratic forms.",,Lecture,9426,"Douglas, Andrew",Brooklyn Campus,RGSH 215
Honors Linear Algebra,148,"This honors section of Linear Algebra is a proof-based course intended for well-prepared students who have already developed some mathematical maturity and ease with abstraction. Its scope will include the usual Linear Algebra (MATH-UA 140) syllabus; however this class will be faster, more abstract and proof-based, covering additional topics. Topics covered are: Vector spaces, linear dependence, basis and dimension, matrices, determinants, solving linear equations, linear transformations, eigenvalues and eigenvectors, diagonalization, inner products, applications.",,Lecture,9055,"Yang, Deane",Washington Square,CIWW 1302
Theory of Probability,233,"Introduction to the mathematical techniques of random phenomena occurring in the natural, physical, and social sciences. Axioms of mathematical probability, combinatorial analysis, binomial distribution, Poisson and normal approximation, random variables and probability distributions, generating functions, Markov chains, applications.",,Lecture,8123,"Xiao, Zhuocheng",Washington Square,CIWW 101
Theory of Probability,233,"Introduction to the mathematical techniques of random phenomena occurring in the natural, physical, and social sciences. Axioms of mathematical probability, combinatorial analysis, binomial distribution, Poisson and normal approximation, random variables and probability distributions, generating functions, Markov chains, applications.",,Lecture,8879,"Wu, Wei",Washington Square,SILV 208
Theory of Probability,233,"Introduction to the mathematical techniques of random phenomena occurring in the natural, physical, and social sciences. Axioms of mathematical probability, combinatorial analysis, binomial distribution, Poisson and normal approximation, random variables and probability distributions, generating functions, Markov chains, applications.",,Lecture,9310,Staff,Brooklyn Campus,
Theory of Probability,233,"Introduction to the mathematical techniques of random phenomena occurring in the natural, physical, and social sciences. Axioms of mathematical probability, combinatorial analysis, binomial distribution, Poisson and normal approximation, random variables and probability distributions, generating functions, Markov chains, applications.",,Lecture,26018,"Stepp, Elizabeth",Washington Square,ONLI
Mathematical Statistics,234,"Prerequisite: a grade of C or better in Theory of Probability (MATH-UA 233) or equivalent. Not open to students who have taken Probability and Statistics (MATH-UA 235). Introduction to the mathematical foundations and techniques of modern statistical analysis used in the interpretation of data in quantitative sciences. Mathematical theory of sampling; normal populations and distributions; chi-square, t, and F distributions; hypothesis testing; estimation; confidence intervals; sequential analysis; correlation, regression, and analysis of variance. Applications to the sciences.",,Lecture,9206,"Chen, Tyler",Washington Square,CIWW 109
Probability & Statistics,235,"Prerequisite: a grade of C or better in Calculus II (MATH-UA 122) or Math for Economics II (MATH-UA 212) (for economics majors) or equivalent. Not open to students who have taken Theory of Probability (MATH-UA 233) or Mathematical Statistics (MATH-UA 234). Combination of MATH-UA 233 and 234 at a more elementary level to acquaint students with both probability and statistics in a single term. In probability: mathematical treatment of chance; combinatorics; binomial, Poisson, and Gaussian distributions; law of large numbers and the normal distribution; application to coin-tossing; radioactive decay. In statistics: sampling; normal and other useful distributions; testing of hypotheses; confidence intervals; correlation and regression; applications to scientific, industrial, and financial data. ",,Lecture,10034,"Falconet, Hugo",Washington Square,CIWW 109
Probability & Statistics,235,"Prerequisite: a grade of C or better in Calculus II (MATH-UA 122) or Math for Economics II (MATH-UA 212) (for economics majors) or equivalent. Not open to students who have taken Theory of Probability (MATH-UA 233) or Mathematical Statistics (MATH-UA 234). Combination of MATH-UA 233 and 234 at a more elementary level to acquaint students with both probability and statistics in a single term. In probability: mathematical treatment of chance; combinatorics; binomial, Poisson, and Gaussian distributions; law of large numbers and the normal distribution; application to coin-tossing; radioactive decay. In statistics: sampling; normal and other useful distributions; testing of hypotheses; confidence intervals; correlation and regression; applications to scientific, industrial, and financial data. ",,Lecture,24010,"Lei, Qi",Washington Square,CIWW 101
Combinatorics,240,"Techniques for counting and enumeration, including generating functions, the principle of inclusion and exclusion, and Polya counting. Graph theory. Modern algorithms and data structures for graph theoretic problems.",,Lecture,9480,"Chiarelli, John",Brooklyn Campus,RGSH 202
Theory of Numbers,248,Divisibility and prime numbers. Linear and quadratic congruences. The classical number-theoretic functions. Continued fractions. Diophantine equations.,,Lecture,8125,"Young, Robert",Washington Square,CIWW 201
Mathematics of Finance,250,"Introduction to the mathematics of finance. Topics: linear programming with application to pricing. Interest rates and present value. Basic probability, random walks, central limit theorem, Brownian motion, log-normal model of stock prices. Black-Scholes theory of options. Dynamic programming with application to portfolio optimization.",,Lecture,8127,"Cerniglia, Joseph",Washington Square,5WP 101
Mathematics of Finance,250,"Introduction to the mathematics of finance. Topics: linear programming with application to pricing. Interest rates and present value. Basic probability, random walks, central limit theorem, Brownian motion, log-normal model of stock prices. Black-Scholes theory of options. Dynamic programming with application to portfolio optimization.",,Lecture,19805,"Dies, Erik",Washington Square,SILV 414
Intro to Math Modeling,251,"Formulation and analysis of mathematical models. Mathematical tools include dimensional analysis, optimization, simulation, probability, and elementary differential equations. Applications to biology, economics, other areas of science. The necessary mathematical and scientific background is developed as needed. Students participate in formulating models as well as in analyzing them.",,Lecture,8817,"Rangan, Aaditya",Washington Square,CIWW 102
Intro to Math Modeling,251,"Formulation and analysis of mathematical models. Mathematical tools include dimensional analysis, optimization, simulation, probability, and elementary differential equations. Applications to biology, economics, other areas of science. The necessary mathematical and scientific background is developed as needed. Students participate in formulating models as well as in analyzing them.",,Lecture,8987,"Smith, K.",Washington Square,SILV 208
Intro to Math Modeling,251,"Formulation and analysis of mathematical models. Mathematical tools include dimensional analysis, optimization, simulation, probability, and elementary differential equations. Applications to biology, economics, other areas of science. The necessary mathematical and scientific background is developed as needed. Students participate in formulating models as well as in analyzing them.",,Lecture,9305,"Rangan, Aaditya",Brooklyn Campus,JABS 775B
Numerical Analysis,252,"In numerical analysis one explores how mathematical problems can be analyzed and solved with a computer. As such, numerical analysis has very broad applications in mathematics, physics, engineering, finance, and the life sciences. This course introduces the subject for mathematics majors. Theory and practical examples using Matlab are combined in the studying of topics ranging from simple root-finding procedures to differential equations and the finite element method.",,Lecture,9076,"Stadler, Georg",Washington Square,CIWW 201
Numerical Analysis,252,"In numerical analysis one explores how mathematical problems can be analyzed and solved with a computer. As such, numerical analysis has very broad applications in mathematics, physics, engineering, finance, and the life sciences. This course introduces the subject for mathematics majors. Theory and practical examples using Matlab are combined in the studying of topics ranging from simple root-finding procedures to differential equations and the finite element method.",,Lecture,9157,"Hashemi, Aref",Washington Square,CIWW 312
Numerical Analysis,252,"In numerical analysis one explores how mathematical problems can be analyzed and solved with a computer. As such, numerical analysis has very broad applications in mathematics, physics, engineering, finance, and the life sciences. This course introduces the subject for mathematics majors. Theory and practical examples using Matlab are combined in the studying of topics ranging from simple root-finding procedures to differential equations and the finite element method.",,Lecture,24015,"Boffi, Nicholas",Washington Square,CIWW 201
Linear and Nonlinear Optimization,253,"Optimization is a major part of the toolbox of the applied mathematician, and more broadly of researchers in quantitative sciences including economics, data science, machine learning, and quantitative social sciences. This course provides an application-oriented introduction to linear programming and convex optimization, with a balanced combination of theory, algorithms, and numerical implementation. While no prior experience in programming is expected, the required coursework will include numerical implementations, including some programming; students will be introduced to appropriate computational tools, with which they will gain experience as they do the numerical assignments. Theoretical topics will include linear programming, convexity, duality, minimax theorems, and dynamic programming. Algorithmic topics will include the simplex method for linear programming, selected techniques for smooth multidimensional optimization (eg Newton's method and the conjugate gradient method), techniques for solving for L1-type optimizations, and stochastic gradient descent. Applications will be drawn from many areas, but will emphasize economics (eg two-person zero-sum games, matching and assignment problems, optimal resource allocation), data science (eg regression, convex-relaxation-based approaches to sparse inverse problems, tuning of neural networks, prediction with expert advice) and operations research (eg shortest paths in networks and optimization of network flows). ",,Lecture,10038,"Potter, Samuel",Washington Square,CIWW 101
Mathematics and Biology,255,"Intended primarily for premedical students with interest and ability in mathematics. Topics of medical importance using mathematics as a tool, including control of the heart, optimal principles in the lung, cell membranes, electrophysiology, countercurrent exchange in the kidney, acid-base balance, muscle, cardiac catheterization, and computer diagnosis. Material from the physical sciences is introduced as needed and developed within the course.",,Lecture,23136,"Maxian, Ondrej",Washington Square,CIWW 312
Ordinary Diff Equations,262,First- and second-order equations. Series solutions. Laplace transforms. Introduction to partial differential equations and Fourier series.,,Lecture,8130,"Dunlap, Alexander",Washington Square,CIWW 102
Ordinary Diff Equations,262,First- and second-order equations. Series solutions. Laplace transforms. Introduction to partial differential equations and Fourier series.,,Lecture,9308,"Zanna, Laure",Washington Square,SILV 414
Ordinary Diff Equations,262,First- and second-order equations. Series solutions. Laplace transforms. Introduction to partial differential equations and Fourier series.,,Lecture,10347,"Chen, Jiajie",Brooklyn Campus,RGSH 201
Partial Diff Equations,263,"Many laws of physics are formulated as partial differential equations. This course discusses the simplest examples of such laws as embodied in the wave equation, the diffusion equation, and Laplace?s equation. Nonlinear conservation laws and the theory of shock waves. Applications to physics, chemistry, biology, and population dynamics.",,Lecture,8819,"Pigati, Alessandro",Washington Square,CIWW 101
Partial Diff Equations,263,"Many laws of physics are formulated as partial differential equations. This course discusses the simplest examples of such laws as embodied in the wave equation, the diffusion equation, and Laplace?s equation. Nonlinear conservation laws and the theory of shock waves. Applications to physics, chemistry, biology, and population dynamics.",,Lecture,22005,"McLaughlin, David",Brooklyn Campus,RGSH 203
Honors Ordinary Differential Equations,268,"This class will develop rigorously the basic theory of Ordinary Differential Equations (ODEs). Existence and uniqueness of solutions to ODEs are first investigated, for linear and nonlinear problems, set on the real line or the complex plane. More qualitative questions are then considered, about the behavior of the solutions, with possible prolongations to various topics in Dynamical Systems theory. Applications to Physics and Biology will appear naturally when discussing examples.",,Lecture,10319,"Bakhtin, Yuri",Washington Square,CIWW 102
Analysis,325,"This course is an introduction to rigorous analysis on the real line. Topics include: the real number system, sequences and series of numbers, functions of a real variable (continuity and differentiability), the Riemann integral, basic topological notions in a metric space, sequences and series of functions including Taylor and Fourier series.",,Lecture,8132,"Cao, Norman",Washington Square,CIWW 109
Analysis,325,"This course is an introduction to rigorous analysis on the real line. Topics include: the real number system, sequences and series of numbers, functions of a real variable (continuity and differentiability), the Riemann integral, basic topological notions in a metric space, sequences and series of functions including Taylor and Fourier series.",,Lecture,8135,"Ampatzoglou, Joakeim",Washington Square,CIWW 109
Analysis,325,"This course is an introduction to rigorous analysis on the real line. Topics include: the real number system, sequences and series of numbers, functions of a real variable (continuity and differentiability), the Riemann integral, basic topological notions in a metric space, sequences and series of functions including Taylor and Fourier series.",,Lecture,9342,"De Philippis, Guido",Washington Square,CIWW 109
Honors Analysis I,328,"This is an introduction to the rigorous treatment of the foundations of real analysis in one variable. It is based entirely on proofs. Students are expected to know what a mathematical proof is and are also expected to be able to read a proof before taking this class. Topics include: properties of the real number system, sequences, continuous functions, topology of the real line, compactness, derivatives, the Riemann integral, sequences of functions, uniform convergence, infinite series and Fourier series. Additional topics may include: Lebesgue measure and integral on the real line, metric spaces, and analysis on metric spaces. ",,Lecture,8744,"Ben Arous, Gerard",Washington Square,CIWW 101
Algebra,343,"Introduction to abstract algebraic structures, including groups, rings, and fields. Sets and relations. Congruences and unique factorization of integers. Groups, permutation groups, homomorphisms and quotient groups. Rings and quotient rings, Euclidean rings, polynomial rings. Fields, finite extensions.",,Lecture,8136,"Chiarelli, John",Washington Square,CIWW 1302
Algebra,343,"Introduction to abstract algebraic structures, including groups, rings, and fields. Sets and relations. Congruences and unique factorization of integers. Groups, permutation groups, homomorphisms and quotient groups. Rings and quotient rings, Euclidean rings, polynomial rings. Fields, finite extensions.",,Lecture,8138,"Pang, Liming",Washington Square,CIWW 101
Algebra,343,"Introduction to abstract algebraic structures, including groups, rings, and fields. Sets and relations. Congruences and unique factorization of integers. Groups, permutation groups, homomorphisms and quotient groups. Rings and quotient rings, Euclidean rings, polynomial rings. Fields, finite extensions.",,Lecture,8984,"Hang, Fengbo",Washington Square,CIWW 312
Honors Algebra I,348,"Introduction to abstract algebraic structures, including groups, rings, and fields. Sets and relations. Congruences and unique factorization of integers. Groups, permutation groups, group actions, homomorphisms and quotient groups, direct products, classification of finitely generated abelian groups, Sylow theorems. Rings, ideals and quotient rings, Euclidean rings, polynomial rings, unique factorization.",,Lecture,8743,"Cappell, Sylvain",Washington Square,CIWW 102
Honors I Fourier Analysis and Applications,393,,Topic: Fourier Analysis and Applications,Lecture,19806,"Shatah, Jalal",Washington Square,CIWW 201
"Special Topics Modeling and Simulation in Sci, Eng, and Econ",395,Lecture-seminar course on advanced topics selected by the instructor. Topics vary yearly. Detailed course descriptions are available during preregistration.Covers topics not offered regularly: experimental courses and courses offered on student demand.,"Topic: Modeling and Simulation in Sci, Eng, and Econ",Lecture,9337,"Peskin, Charles",Washington Square,CIWW 312
Independent Study,997,"Prerequisite: permission of the department. 2 or 4 points per term. To register for this course, a student must complete an application form for independent study and have it approved by a faculty sponsor and the director of undergraduate studies.",,Independent Study,8140,Staff,Washington Square,
Independent Study,997,"Prerequisite: permission of the department. 2 or 4 points per term. To register for this course, a student must complete an application form for independent study and have it approved by a faculty sponsor and the director of undergraduate studies.",,Independent Study,8443,Staff,Washington Square,
"Algebra, Trigonometry, and Functions",9009,"Prerequisite: Three years of high school math or permission of the department. An intensive course in intermediate algebra and trigonometry. Topics include algebraic, exponential, logarithmic, and trigonometric functions and their graphs.",,Lecture,22312,"Kosmopoulos, Kosmas",NYU London (Global),BDFS 201
Calculus I,9121,"Any one of the following: a score of 670 or higher on the mathematics portion of the SAT, a score of 650 or higher on the SAT Subject Test in Mathematics 1, a score of 650 or higher on the SAT Subject Test in Mathematics 2, an ACT mathematics score of 30 or higher, a score of 3 or higher on the AP Calculus AB exam, an AB subscore of 3 or higher on the AP Calculus BC exam, a score of 3 or higher on the AP Calculus BC exam, a grade of C or higher in Algebra and Calculus (MATH-UA 9), or a passing score on a departmental placement exam. Derivatives, antiderivatives, and integrals of functions of one variable. Applications include graphing,maximizing, and minimizing functions. Definite integrals and the fundamental theorem of calculus. Areas and volumes. ",,Lecture,22313,"Roberts, Mark",NYU London (Global),BDFS 102
Mathematics for Economics I,9131,This course is only open to Economics Majors and prospective majors. If an Economics Major decides to double or joint major in Math these courses will replace Calculus I - III. Elements of calculus and linear algebra are important to the study of economics. This class is designed to provide the appropriate tools for study in the policy concentration. Examples and motivation are drawn from important topics in economics. Topics covered include derivatives of functions of one and several variables; interpretations of the derivatives; convexity; constrained and unconstrained optimization.,,Lecture,22879,"Hubbert, Simon",NYU London (Global),BDFS G04
Linear Algebra,9140,"This is an introductory course on linear algebra, one of the most important and basic areas of mathematics, with many real-life applications. The course introduces students to both the theory of vector spaces and linear transformations and the techniques such as row-reduction of matrices and diagonalisation, which can be applied to problems in areas such as engineering, economics, and mathematical biology. As well as mastering techniques, it is important that the students get to grips with the more abstract ideas of linear algebra, and learn to understand and write correct mathematical arguments. Taking an active approach to problem-solving is also important. ",,Lecture,22404,Staff,NYU Paris (Global),
Linear Algebra,9140,"This is an introductory course on linear algebra, one of the most important and basic areas of mathematics, with many real-life applications. The course introduces students to both the theory of vector spaces and linear transformations and the techniques such as row-reduction of matrices and diagonalisation, which can be applied to problems in areas such as engineering, economics, and mathematical biology. As well as mastering techniques, it is important that the students get to grips with the more abstract ideas of linear algebra, and learn to understand and write correct mathematical arguments. Taking an active approach to problem-solving is also important. ",,Lecture,22314,"Roberts, Mark",NYU London (Global),BDFS G05
Linear Algebra,9140,"This is an introductory course on linear algebra, one of the most important and basic areas of mathematics, with many real-life applications. The course introduces students to both the theory of vector spaces and linear transformations and the techniques such as row-reduction of matrices and diagonalisation, which can be applied to problems in areas such as engineering, economics, and mathematical biology. As well as mastering techniques, it is important that the students get to grips with the more abstract ideas of linear algebra, and learn to understand and write correct mathematical arguments. Taking an active approach to problem-solving is also important. ",,Lecture,23188,"Lebovits, Joachim",NYU Paris (Global),PARI 608
Numerical Analysis,9252,,,Lecture,22403,Staff,NYU Paris (Global),
Numerical Analysis,9252,,,Lecture,23186,"Vaes, Urbain",NYU Paris (Global),PARI 406
Functions of a Complex Variable,9282,"Complex numbers and complex functions. Differentiation and the Cauchy-Riemann equations. Cauchy?s theorem and the Cauchy integral formula. Singularities, residues, Taylor and Laurent series. Fractional linear transformations and conformal mapping. Analytic continuation.",,Lecture,22405,Staff,NYU Paris (Global),
Functions of a Complex Variable,9282,"Complex numbers and complex functions. Differentiation and the Cauchy-Riemann equations. Cauchy?s theorem and the Cauchy integral formula. Singularities, residues, Taylor and Laurent series. Fractional linear transformations and conformal mapping. Analytic continuation.",,Lecture,23184,"Lebovits, Joachim",NYU Paris (Global),ONLI
Introduction to Computer Programming (No Prior Experience),2,"Prerequisite: Three years of high school mathematics or equivalent. No prior computer experience assumed. Students with any programming experience should consult with the computer science department before registering. Students who have taken or are taking CSCI-UA 101 will not receive credit for this course. Note: This course is not intended for computer science majors, although it is a prerequisite for students with no previous programming experience who want to continue in CSCI-UA 101. Offered every semester. 4 points. An introduction to the fundamentals of computer programming, which is the foundation of Computer Science. Students design, write and debug computer programs. No knowledge of programming is assumed. ",,Lecture,7441,"Steigman, Amanda",Washington Square,12WV L120
Introduction to Computer Programming (No Prior Experience),2,"Prerequisite: Three years of high school mathematics or equivalent. No prior computer experience assumed. Students with any programming experience should consult with the computer science department before registering. Students who have taken or are taking CSCI-UA 101 will not receive credit for this course. Note: This course is not intended for computer science majors, although it is a prerequisite for students with no previous programming experience who want to continue in CSCI-UA 101. Offered every semester. 4 points. An introduction to the fundamentals of computer programming, which is the foundation of Computer Science. Students design, write and debug computer programs. No knowledge of programming is assumed. ",,Lecture,7442,"Liao, Susan",Washington Square,12WV L120
Introduction to Computer Programming (No Prior Experience),2,"Prerequisite: Three years of high school mathematics or equivalent. No prior computer experience assumed. Students with any programming experience should consult with the computer science department before registering. Students who have taken or are taking CSCI-UA 101 will not receive credit for this course. Note: This course is not intended for computer science majors, although it is a prerequisite for students with no previous programming experience who want to continue in CSCI-UA 101. Offered every semester. 4 points. An introduction to the fundamentals of computer programming, which is the foundation of Computer Science. Students design, write and debug computer programs. No knowledge of programming is assumed. ",,Lecture,7443,"Kapp, Craig, Bhat, Atharv, Malepati, Sachin, Krishnakumar, Muthukrishna",Washington Square,MEYR 121
Introduction to Computer Programming (No Prior Experience),2,"Prerequisite: Three years of high school mathematics or equivalent. No prior computer experience assumed. Students with any programming experience should consult with the computer science department before registering. Students who have taken or are taking CSCI-UA 101 will not receive credit for this course. Note: This course is not intended for computer science majors, although it is a prerequisite for students with no previous programming experience who want to continue in CSCI-UA 101. Offered every semester. 4 points. An introduction to the fundamentals of computer programming, which is the foundation of Computer Science. Students design, write and debug computer programs. No knowledge of programming is assumed. ",,Lecture,9116,"Lizardo, Julie",Washington Square,BOBS LL138
Introduction to Computer Programming (No Prior Experience),2,"Prerequisite: Three years of high school mathematics or equivalent. No prior computer experience assumed. Students with any programming experience should consult with the computer science department before registering. Students who have taken or are taking CSCI-UA 101 will not receive credit for this course. Note: This course is not intended for computer science majors, although it is a prerequisite for students with no previous programming experience who want to continue in CSCI-UA 101. Offered every semester. 4 points. An introduction to the fundamentals of computer programming, which is the foundation of Computer Science. Students design, write and debug computer programs. No knowledge of programming is assumed. ",,Lecture,7444,"Robert, Zoe",Washington Square,25W4 C-20
Introduction to Computer Programming (No Prior Experience),2,"Prerequisite: Three years of high school mathematics or equivalent. No prior computer experience assumed. Students with any programming experience should consult with the computer science department before registering. Students who have taken or are taking CSCI-UA 101 will not receive credit for this course. Note: This course is not intended for computer science majors, although it is a prerequisite for students with no previous programming experience who want to continue in CSCI-UA 101. Offered every semester. 4 points. An introduction to the fundamentals of computer programming, which is the foundation of Computer Science. Students design, write and debug computer programs. No knowledge of programming is assumed. ",,Lecture,7445,"Prager, David",Washington Square,KIMM 803
Introduction to Computer Programming (No Prior Experience),2,"Prerequisite: Three years of high school mathematics or equivalent. No prior computer experience assumed. Students with any programming experience should consult with the computer science department before registering. Students who have taken or are taking CSCI-UA 101 will not receive credit for this course. Note: This course is not intended for computer science majors, although it is a prerequisite for students with no previous programming experience who want to continue in CSCI-UA 101. Offered every semester. 4 points. An introduction to the fundamentals of computer programming, which is the foundation of Computer Science. Students design, write and debug computer programs. No knowledge of programming is assumed. ",,Lecture,7446,"Lizardo, Julie",Washington Square,BOBS LL138
Introduction to Computer Programming (No Prior Experience),2,"Prerequisite: Three years of high school mathematics or equivalent. No prior computer experience assumed. Students with any programming experience should consult with the computer science department before registering. Students who have taken or are taking CSCI-UA 101 will not receive credit for this course. Note: This course is not intended for computer science majors, although it is a prerequisite for students with no previous programming experience who want to continue in CSCI-UA 101. Offered every semester. 4 points. An introduction to the fundamentals of computer programming, which is the foundation of Computer Science. Students design, write and debug computer programs. No knowledge of programming is assumed. ",,Lecture,8556,"Zeidenberg, Matthew",Washington Square,ONLI
Introduction to Computer Programming (No Prior Experience),2,"Prerequisite: Three years of high school mathematics or equivalent. No prior computer experience assumed. Students with any programming experience should consult with the computer science department before registering. Students who have taken or are taking CSCI-UA 101 will not receive credit for this course. Note: This course is not intended for computer science majors, although it is a prerequisite for students with no previous programming experience who want to continue in CSCI-UA 101. Offered every semester. 4 points. An introduction to the fundamentals of computer programming, which is the foundation of Computer Science. Students design, write and debug computer programs. No knowledge of programming is assumed. ",,Lecture,8558,"Clayton, Joshua, Herwin, Matahari",Washington Square,ONLI
Introduction to Computer Programming (No Prior Experience),2,"Prerequisite: Three years of high school mathematics or equivalent. No prior computer experience assumed. Students with any programming experience should consult with the computer science department before registering. Students who have taken or are taking CSCI-UA 101 will not receive credit for this course. Note: This course is not intended for computer science majors, although it is a prerequisite for students with no previous programming experience who want to continue in CSCI-UA 101. Offered every semester. 4 points. An introduction to the fundamentals of computer programming, which is the foundation of Computer Science. Students design, write and debug computer programs. No knowledge of programming is assumed. ",,Lecture,8730,"Liew, Khye Borg",Washington Square,ONLI
Introduction to Computer Programming (No Prior Experience),2,"Prerequisite: Three years of high school mathematics or equivalent. No prior computer experience assumed. Students with any programming experience should consult with the computer science department before registering. Students who have taken or are taking CSCI-UA 101 will not receive credit for this course. Note: This course is not intended for computer science majors, although it is a prerequisite for students with no previous programming experience who want to continue in CSCI-UA 101. Offered every semester. 4 points. An introduction to the fundamentals of computer programming, which is the foundation of Computer Science. Students design, write and debug computer programs. No knowledge of programming is assumed. ",,Lecture,9559,"Zhao, Emily",Washington Square,GCASL 361
Introduction to Computer Programming (No Prior Experience),2,"Prerequisite: Three years of high school mathematics or equivalent. No prior computer experience assumed. Students with any programming experience should consult with the computer science department before registering. Students who have taken or are taking CSCI-UA 101 will not receive credit for this course. Note: This course is not intended for computer science majors, although it is a prerequisite for students with no previous programming experience who want to continue in CSCI-UA 101. Offered every semester. 4 points. An introduction to the fundamentals of computer programming, which is the foundation of Computer Science. Students design, write and debug computer programs. No knowledge of programming is assumed. ",,Lecture,8882,"Cardona, Michell",Washington Square,TISC LC11
Introduction to Computer Programming (No Prior Experience),2,"Prerequisite: Three years of high school mathematics or equivalent. No prior computer experience assumed. Students with any programming experience should consult with the computer science department before registering. Students who have taken or are taking CSCI-UA 101 will not receive credit for this course. Note: This course is not intended for computer science majors, although it is a prerequisite for students with no previous programming experience who want to continue in CSCI-UA 101. Offered every semester. 4 points. An introduction to the fundamentals of computer programming, which is the foundation of Computer Science. Students design, write and debug computer programs. No knowledge of programming is assumed. ",,Lecture,25468,"Patil, Mihir",Washington Square,CIWW 317
Introduction to Computer Programming (Limited Prior Experience),3,"This course introduces object-oriented programming, recursion, and other important programming concepts to students who already have had some exposure to programming in the context of building applications using Python. Students will design and implement Python programs in a variety of applied areas.",,Lecture,9289,"Arias Hernandez, Mauricio",Washington Square,ONLI
Introduction to Web Design and Computer Principles,4,"Prerequisite: Three years of high school mathematics or equivalent. No prior computing experience is assumed. Students with computing experience should consult with the computer science department before registering. Offered every semester. 4 points. This course introduces students to both the practice of web design and the basic principles of computer science. The practice component of the course covers not only web design but also current graphics and software tools. The principles section includes an overview of hardware and software, the history of computers, and a discussion of the impact of computers and the internet. ",,Lecture,8659,"Olsen, Al",Washington Square,BOBS LL150
Introduction to Web Design and Computer Principles,4,"Prerequisite: Three years of high school mathematics or equivalent. No prior computing experience is assumed. Students with computing experience should consult with the computer science department before registering. Offered every semester. 4 points. This course introduces students to both the practice of web design and the basic principles of computer science. The practice component of the course covers not only web design but also current graphics and software tools. The principles section includes an overview of hardware and software, the history of computers, and a discussion of the impact of computers and the internet. ",,Lecture,7447,"Scher, Adam",Washington Square,ONLI
Introduction to Web Design and Computer Principles,4,"Prerequisite: Three years of high school mathematics or equivalent. No prior computing experience is assumed. Students with computing experience should consult with the computer science department before registering. Offered every semester. 4 points. This course introduces students to both the practice of web design and the basic principles of computer science. The practice component of the course covers not only web design but also current graphics and software tools. The principles section includes an overview of hardware and software, the history of computers, and a discussion of the impact of computers and the internet. ",,Lecture,7448,"Ramos, Mark",Washington Square,CIWW 102
Introduction to Web Design and Computer Principles,4,"Prerequisite: Three years of high school mathematics or equivalent. No prior computing experience is assumed. Students with computing experience should consult with the computer science department before registering. Offered every semester. 4 points. This course introduces students to both the practice of web design and the basic principles of computer science. The practice component of the course covers not only web design but also current graphics and software tools. The principles section includes an overview of hardware and software, the history of computers, and a discussion of the impact of computers and the internet. ",,Lecture,7449,"Clayton, Joshua",Washington Square,CIWW 317
Introduction to Web Design and Computer Principles,4,"Prerequisite: Three years of high school mathematics or equivalent. No prior computing experience is assumed. Students with computing experience should consult with the computer science department before registering. Offered every semester. 4 points. This course introduces students to both the practice of web design and the basic principles of computer science. The practice component of the course covers not only web design but also current graphics and software tools. The principles section includes an overview of hardware and software, the history of computers, and a discussion of the impact of computers and the internet. ",,Lecture,8436,"Lizardo, Julie",Washington Square,GCASL 279
Introduction to Web Design and Computer Principles,4,"Prerequisite: Three years of high school mathematics or equivalent. No prior computing experience is assumed. Students with computing experience should consult with the computer science department before registering. Offered every semester. 4 points. This course introduces students to both the practice of web design and the basic principles of computer science. The practice component of the course covers not only web design but also current graphics and software tools. The principles section includes an overview of hardware and software, the history of computers, and a discussion of the impact of computers and the internet. ",,Lecture,8557,"Olsen, Al",Washington Square,SILV 208
Database Design and Implementation,60,"Students that have successfully completed CSCI-UA 479 Data Management and Analysis are not eligible to take CSCI-UA 60 Database Design and Implementation. Introduces principles and applications of database design and working with data. Students use python as they prepare, analyze and work with data; SQL to study the principles and implementations of relational databases; and are introduced to other database paradigms such as NoSQL. Students apply these principles to computer systems in general and in their respective fields of interest.",,Lecture,8576,"Bloomberg, Amos, Prasoon, Prasoon",Washington Square,5WP 101
Web Development and Programming,61,"Students that have successfully completed CSCI-UA 467 Applied Internet Technology are not eligible to take CSCI-UA 61 Web Development and Programming. This course will provide a practical approach to web technologies and programming. Students will build interactive, secure and powerful web programs. This course will cover client and server side technologies for the web.",,Lecture,7450,"Odeh, Sana",Washington Square,SILV 408
Intro to Computer Science,101,"Students learn how to design algorithms to solve problems and how to translate these algorithms into working computer programs. Experience is acquired through programming projects in a high level programming language. CSCI-UA 101 is intended as a first course for computer science majors, and for students of other scientific disciplines. Programming assignments.",,Lecture,7451,"Nassar, Nader",Washington Square,SILV 208
Intro to Computer Science,101,"Students learn how to design algorithms to solve problems and how to translate these algorithms into working computer programs. Experience is acquired through programming projects in a high level programming language. CSCI-UA 101 is intended as a first course for computer science majors, and for students of other scientific disciplines. Programming assignments.",,Lecture,9887,"Kayar, Gizem",Washington Square,ONLI
Intro to Computer Science,101,"Students learn how to design algorithms to solve problems and how to translate these algorithms into working computer programs. Experience is acquired through programming projects in a high level programming language. CSCI-UA 101 is intended as a first course for computer science majors, and for students of other scientific disciplines. Programming assignments.",,Lecture,19940,"Locklear, Hilbert",Washington Square,25W4 C-20
Intro to Computer Science,101,"Students learn how to design algorithms to solve problems and how to translate these algorithms into working computer programs. Experience is acquired through programming projects in a high level programming language. CSCI-UA 101 is intended as a first course for computer science majors, and for students of other scientific disciplines. Programming assignments.",,Lecture,7452,"Cabo, Candido",Washington Square,TISC LC11
Intro to Computer Science,101,"Students learn how to design algorithms to solve problems and how to translate these algorithms into working computer programs. Experience is acquired through programming projects in a high level programming language. CSCI-UA 101 is intended as a first course for computer science majors, and for students of other scientific disciplines. Programming assignments.",,Lecture,8460,"Ataman, Duygu",Washington Square,ONLI
Intro to Computer Science,101,"Students learn how to design algorithms to solve problems and how to translate these algorithms into working computer programs. Experience is acquired through programming projects in a high level programming language. CSCI-UA 101 is intended as a first course for computer science majors, and for students of other scientific disciplines. Programming assignments.",,Lecture,9886,"Odeh, Sana",Washington Square,KIMM 803
Intro to Computer Science,101,"Students learn how to design algorithms to solve problems and how to translate these algorithms into working computer programs. Experience is acquired through programming projects in a high level programming language. CSCI-UA 101 is intended as a first course for computer science majors, and for students of other scientific disciplines. Programming assignments.",,Lecture,8661,"Locklear, Hilbert",Washington Square,SILV 401
Intro to Computer Science,101,"Students learn how to design algorithms to solve problems and how to translate these algorithms into working computer programs. Experience is acquired through programming projects in a high level programming language. CSCI-UA 101 is intended as a first course for computer science majors, and for students of other scientific disciplines. Programming assignments.",,Lecture,8958,"Bari, Anasse, Davidson, Christopher, Goel, Anmol",Washington Square,CANT 101
Intro to Computer Science,101,"Students learn how to design algorithms to solve problems and how to translate these algorithms into working computer programs. Experience is acquired through programming projects in a high level programming language. CSCI-UA 101 is intended as a first course for computer science majors, and for students of other scientific disciplines. Programming assignments.",,Lecture,23231,"Odeh, Sana",Washington Square,ONLI
Data Structures,102,"The use and design of data structures, which organize information in computer memory. Stacks, queues, linked lists, binary trees: how to implement them in a high level language, how to analyze their effect on algorithm efficiency, and how to modify them. Programming assignments.",,Lecture,7454,"Korth, Evan",Washington Square,TISC UC50
Data Structures,102,"The use and design of data structures, which organize information in computer memory. Stacks, queues, linked lists, binary trees: how to implement them in a high level language, how to analyze their effect on algorithm efficiency, and how to modify them. Programming assignments.",,Lecture,7456,"Bari, Anasse",Washington Square,ONLI
Data Structures,102,"The use and design of data structures, which organize information in computer memory. Stacks, queues, linked lists, binary trees: how to implement them in a high level language, how to analyze their effect on algorithm efficiency, and how to modify them. Programming assignments.",,Lecture,9133,"Klukowska, Joanna, Khatri, Riju, Suresh, Surekha",Washington Square,CANT 200
Computer Systems Org,201,"This course covers the internal structure of computers, machine (assembly) language programming, and the use of pointers in high-level languages. Topics include the logical design of computers, computer architecture, the internal representation of data, instruction sets, and addressing logic, as well as pointers, structures, and other features of high-level languages that relate to assembly language. Programming assignments will be both in assembly language and other languages.",,Lecture,7457,"Moody, Douglas",Washington Square,ONLI
Computer Systems Org,201,"This course covers the internal structure of computers, machine (assembly) language programming, and the use of pointers in high-level languages. Topics include the logical design of computers, computer architecture, the internal representation of data, instruction sets, and addressing logic, as well as pointers, structures, and other features of high-level languages that relate to assembly language. Programming assignments will be both in assembly language and other languages.",,Lecture,8575,"Li, Jinyang",Washington Square,ONLI
Computer Systems Org,201,"This course covers the internal structure of computers, machine (assembly) language programming, and the use of pointers in high-level languages. Topics include the logical design of computers, computer architecture, the internal representation of data, instruction sets, and addressing logic, as well as pointers, structures, and other features of high-level languages that relate to assembly language. Programming assignments will be both in assembly language and other languages.",,Lecture,8902,"Aljabbouli, Hasan, Kapoor, Somya",Washington Square,CANT 101
Computer Systems Org,201,"This course covers the internal structure of computers, machine (assembly) language programming, and the use of pointers in high-level languages. Topics include the logical design of computers, computer architecture, the internal representation of data, instruction sets, and addressing logic, as well as pointers, structures, and other features of high-level languages that relate to assembly language. Programming assignments will be both in assembly language and other languages.",,Lecture,23230,"Kayar, Gizem",Washington Square,ONLI
Operating Systems,202,"This course covers the principles and design of operating systems. Topics include process scheduling and synchronization, deadlocks, memory management including virtual memory, input-output and file systems. Programming assignments.",,Lecture,7459,"Tang, Yang, Changwani, Ashay, Zheng, Tingting",Washington Square,ONLI
Operating Systems,202,"This course covers the principles and design of operating systems. Topics include process scheduling and synchronization, deadlocks, memory management including virtual memory, input-output and file systems. Programming assignments.",,Lecture,9053,"Zahran, Mohamed, Balaji, Maya, Sinha, Shiv",Washington Square,ONLI
Basic Algorithms,310,"Prerequisites: Data Structures (CSCI-UA 102); Discrete Mathematics (MATH-UA 120); and either Calculus I (MATH-UA 121) OR Math for Economics I (MATH-UA 211). An introduction to the study of algorithms. Two main themes are presented: designing appropriate data structures, and analyzing the efficiency of the algorithms which use them. Algorithms for basic problems are studied. These include sorting, searching, graph algorithms and maintaining dynamic data structures. Homework assignments, not necessarily involving programming.",,Lecture,7460,"Ball, Marshall, Hall, Peter, Goldin, Eli",Washington Square,CANT 101
Basic Algorithms,310,"Prerequisites: Data Structures (CSCI-UA 102); Discrete Mathematics (MATH-UA 120); and either Calculus I (MATH-UA 121) OR Math for Economics I (MATH-UA 211). An introduction to the study of algorithms. Two main themes are presented: designing appropriate data structures, and analyzing the efficiency of the algorithms which use them. Algorithms for basic problems are studied. These include sorting, searching, graph algorithms and maintaining dynamic data structures. Homework assignments, not necessarily involving programming.",,Lecture,9052,"Regev, Oded, Song, Min Jae",Washington Square,CANT 101
Basic Algorithms,310,"Prerequisites: Data Structures (CSCI-UA 102); Discrete Mathematics (MATH-UA 120); and either Calculus I (MATH-UA 121) OR Math for Economics I (MATH-UA 211). An introduction to the study of algorithms. Two main themes are presented: designing appropriate data structures, and analyzing the efficiency of the algorithms which use them. Algorithms for basic problems are studied. These include sorting, searching, graph algorithms and maintaining dynamic data structures. Homework assignments, not necessarily involving programming.",,Lecture,25048,"Mojarrad, Hossein",Washington Square,ONLI
Topics of General Interest: Interactive Computing,380,Detailed descriptions will be available when topics are announced. Typical offerings are Introduction to Multimedia; Database and Web Programming; Interface Design for the World Wide Web. Note: These courses cannot be used as credit towards the major sequence.,Topic: Interactive Computing,Lecture,7462,"Kapp, Craig",Washington Square,CIWW 102
Programming Tools for the Data Scientist,381,"This course focuses on building applications in Python using a project-based learning approach. Students will design projects using important Python packages in a variety of applied areas such as textual analysis, data visualization, and others.",,Lecture,9893,"Aljabbouli, Hasan",Washington Square,SILV 208
Applied Internet Technology,467,"Students that successfully complete CSCI-UA 467 Applied Internet Technology are not eligible to take CSCI-UA 61 Web Development and Programming. Applied Internet Technology is a practical introduction to creating modern web applications. It covers full-stack (that is, every aspect of building a database driven web application: server programming, database implementation, frontend markup, styling and interactivity) web development. It includes topics such as database and data model design, web application architecture, separation of logic and presentation, handling user input and processing form data, managing asynchronous processes, strategies for creating real-time web applications, and handling client-side interactivity. Students will use current server and client-side web frameworks and libraries to build dynamic, data-driven sites. Various applications to support development will also be introduced, such as version control, static analysis tools, and build systems. ",,Lecture,9894,"Versoza, Joseph, Wu, Haodong",Washington Square,ONLI
Applied Internet Technology,467,"Students that successfully complete CSCI-UA 467 Applied Internet Technology are not eligible to take CSCI-UA 61 Web Development and Programming. Applied Internet Technology is a practical introduction to creating modern web applications. It covers full-stack (that is, every aspect of building a database driven web application: server programming, database implementation, frontend markup, styling and interactivity) web development. It includes topics such as database and data model design, web application architecture, separation of logic and presentation, handling user input and processing form data, managing asynchronous processes, strategies for creating real-time web applications, and handling client-side interactivity. Students will use current server and client-side web frameworks and libraries to build dynamic, data-driven sites. Various applications to support development will also be introduced, such as version control, static analysis tools, and build systems. ",,Lecture,19941,"Versoza, Joseph, Ahmed, Sameer",Washington Square,SILV 208
Object Oriented Programming,470,"Object-oriented programming has emerged as a significant software development methodology. This course introduces the important concepts of object-oriented design and languages, including code reuse, data abstraction, inheritance, and dynamic overloading. It covers in depth those features of Java and C++ that support object-oriented programming and gives an overview of other object-oriented languages of interest. Significant programming assignments, stressing object-oriented design.",,Lecture,9891,"Aljabbouli, Hasan",Washington Square,SILV 206
Artificial Intelligence,472,"Prerequisite: V22.0201 and V22.0310. There are many cognitive tasks that people can do easily and almost unconsciously but that have proven extremely difficult to program on a computer. Artificial intelligence is the problem of developing computer systems that can carry out these tasks. We will focus on three central areas in AI: representation and reasoning, machine learning, and natural language processing.",,Lecture,22829,"Davis, Ernest",Washington Square,CIWW 102
Fundamentals of Machine Learning | Introduction to Machine Learning,473,"Students will learn about the theoretical foundations of machine learning and how to apply machine learning to solve new problems. Machine learning is an exciting and fast-moving field at the intersection of computer science, statistics, and optimization, with many consumer applications such as machine translation, speech recognition, and recommendation. Machine learning also plays an increasingly central role in data science, enabling discoveries in fields such as biology, physics, neuroscience, and medicine. In the first part of the course, students will learn about supervised prediction methods including linear and logistic regression, support vector machines, ensemble methods, and decision trees. In the second part of the course, students will learn about methods for clustering, dimensionality reduction, and statistical inference. ",,Lecture,10346,"Pinto, Lerrel, Haldar, Siddhant",Washington Square,ONLI
Software Engineering,474,"An intense hands-on study of practical techniques and methods of software engineering. Topics include advanced object-oriented design, design patterns, refactoring, code optimization, universal modeling language, threading, user interface design, enterprise application development, and development tools. All topics are integrated and applied during the semester-long group project. The aim of the project is to prepare students for dynamics in a real workplace. Members of the group meet on a regular basis to discuss the project and to assign individual tasks. Students are judged primarily on the final project presentations. ",,Lecture,9892,"Bloomberg, Amos",Washington Square,SILV 411
Processing Big Data for Analytics Applications,476,"This course introduces platforms, tools, and the architectures that facilitate scalable management and processing of vast quantities of data. We will explore open source tools enabling the efficient acquisition, storage, and processing of Big Data. Students will learn about distributed storage solutions such as the Apache Hadoop Distributed File System (HDFS), which supports storage of Big Data. Students will gain hands-on experience with distributed processing Apache solutions such as Hadoop MapReduce, HBase, Hive, Impala, Pig, core Spark, Spark SQL, and Spark Streaming. Other Apache big data tools covered are Oozie, Zookeeper, Flume, and Kafka. ",,Lecture,9507,"Malavet, Ann",Washington Square,GCASL 383
Intro to Cryptography,478,,,Lecture,22830,Staff,Washington Square,
Data Management and Analysis,479,"Students that successfully complete CSCI-UA 479 Data Management and Analysis are not eligible to take CSCI-UA 60 Database Design and Implementation. Extracting, transforming and analyzing data in myriad formats. Using traditional relational databases as well as non-relational databases to store, manipulate, and query data. Students will learn how to work with data by writing custom programs, creating queries, and using current data analysis tools and libraries… all on a wide array of data sets. Additional related topics will be covered, such as data modeling, cloud databases, and API programming. ",,Lecture,9895,"Versoza, Joseph, Sateesh, Tejas",Washington Square,ONLI
Data Management and Analysis,479,"Students that successfully complete CSCI-UA 479 Data Management and Analysis are not eligible to take CSCI-UA 60 Database Design and Implementation. Extracting, transforming and analyzing data in myriad formats. Using traditional relational databases as well as non-relational databases to store, manipulate, and query data. Students will learn how to work with data by writing custom programs, creating queries, and using current data analysis tools and libraries… all on a wide array of data sets. Additional related topics will be covered, such as data modeling, cloud databases, and API programming. ",,Lecture,19942,"Zeidenberg, Matthew, Khanderia, Jaimin Dineshbhai",Washington Square,SILV 411
Data Management and Analysis,479,"Students that successfully complete CSCI-UA 479 Data Management and Analysis are not eligible to take CSCI-UA 60 Database Design and Implementation. Extracting, transforming and analyzing data in myriad formats. Using traditional relational databases as well as non-relational databases to store, manipulate, and query data. Students will learn how to work with data by writing custom programs, creating queries, and using current data analysis tools and libraries… all on a wide array of data sets. Additional related topics will be covered, such as data modeling, cloud databases, and API programming. ",,Lecture,23721,"Zeidenberg, Matthew, Khanderia, Jaimin Dineshbhai",Washington Square,ONLI
Special Topics: Agile Software Development and DevOps Algorithmic Problem Solving Collaborating Remotely: Build Software from Anywhe Computer Graphics Computer Networks Computer Vision Natural Language Processing Parallel Computing Principles of Programming Languages Social Networking,480,"Each semester, multiple special topics courses are offered, covering topics that may not be offered on a regular basis. Prerequisites vary and are determined by topic. Extracting, transforming and analyzing data in myriad formats with traditional relational databases as well as non-relational databases. Data modeling, cloud databases, and API programming. Garnering insights using Python and current data analysis tools and libraries.",Topic: Computer Graphics,Lecture,8977,"Perlin, Kenneth",Washington Square,CIWW 101
Special Topics: Agile Software Development and DevOps Algorithmic Problem Solving Collaborating Remotely: Build Software from Anywhe Computer Graphics Computer Networks Computer Vision Natural Language Processing Parallel Computing Principles of Programming Languages Social Networking,480,"Each semester, multiple special topics courses are offered, covering topics that may not be offered on a regular basis. Prerequisites vary and are determined by topic. Extracting, transforming and analyzing data in myriad formats with traditional relational databases as well as non-relational databases. Data modeling, cloud databases, and API programming. Garnering insights using Python and current data analysis tools and libraries.",Topic: Computer Vision,Lecture,10208,"Geiger, Davi",Washington Square,SILV 401
Special Topics: Agile Software Development and DevOps Algorithmic Problem Solving Collaborating Remotely: Build Software from Anywhe Computer Graphics Computer Networks Computer Vision Natural Language Processing Parallel Computing Principles of Programming Languages Social Networking,480,"Each semester, multiple special topics courses are offered, covering topics that may not be offered on a regular basis. Prerequisites vary and are determined by topic. Extracting, transforming and analyzing data in myriad formats with traditional relational databases as well as non-relational databases. Data modeling, cloud databases, and API programming. Garnering insights using Python and current data analysis tools and libraries.",Topic: Social Networking,Lecture,8710,"Mishra, Bhubaneswar",Washington Square,GCASL 383
Special Topics: Agile Software Development and DevOps Algorithmic Problem Solving Collaborating Remotely: Build Software from Anywhe Computer Graphics Computer Networks Computer Vision Natural Language Processing Parallel Computing Principles of Programming Languages Social Networking,480,"Each semester, multiple special topics courses are offered, covering topics that may not be offered on a regular basis. Prerequisites vary and are determined by topic. Extracting, transforming and analyzing data in myriad formats with traditional relational databases as well as non-relational databases. Data modeling, cloud databases, and API programming. Garnering insights using Python and current data analysis tools and libraries.",Topic: Parallel Computing,Lecture,9080,Staff,Washington Square,
Special Topics: Agile Software Development and DevOps Algorithmic Problem Solving Collaborating Remotely: Build Software from Anywhe Computer Graphics Computer Networks Computer Vision Natural Language Processing Parallel Computing Principles of Programming Languages Social Networking,480,"Each semester, multiple special topics courses are offered, covering topics that may not be offered on a regular basis. Prerequisites vary and are determined by topic. Extracting, transforming and analyzing data in myriad formats with traditional relational databases as well as non-relational databases. Data modeling, cloud databases, and API programming. Garnering insights using Python and current data analysis tools and libraries.",Topic: Algorithmic Problem Solving,Lecture,22800,"Klukowska, Joanna, R D, Harshitha",Washington Square,CIWW 101
Special Topics: Agile Software Development and DevOps Algorithmic Problem Solving Collaborating Remotely: Build Software from Anywhe Computer Graphics Computer Networks Computer Vision Natural Language Processing Parallel Computing Principles of Programming Languages Social Networking,480,"Each semester, multiple special topics courses are offered, covering topics that may not be offered on a regular basis. Prerequisites vary and are determined by topic. Extracting, transforming and analyzing data in myriad formats with traditional relational databases as well as non-relational databases. Data modeling, cloud databases, and API programming. Garnering insights using Python and current data analysis tools and libraries.",Topic: Principles of Programming Languages,Lecture,10210,Staff,Washington Square,
Special Topics: Agile Software Development and DevOps Algorithmic Problem Solving Collaborating Remotely: Build Software from Anywhe Computer Graphics Computer Networks Computer Vision Natural Language Processing Parallel Computing Principles of Programming Languages Social Networking,480,"Each semester, multiple special topics courses are offered, covering topics that may not be offered on a regular basis. Prerequisites vary and are determined by topic. Extracting, transforming and analyzing data in myriad formats with traditional relational databases as well as non-relational databases. Data modeling, cloud databases, and API programming. Garnering insights using Python and current data analysis tools and libraries.",Topic: Natural Language Processing,Lecture,8877,"Meyers, Adam, Shyamsunder, Abishek",Washington Square,ONLI
Special Topics: Agile Software Development and DevOps Algorithmic Problem Solving Collaborating Remotely: Build Software from Anywhe Computer Graphics Computer Networks Computer Vision Natural Language Processing Parallel Computing Principles of Programming Languages Social Networking,480,"Each semester, multiple special topics courses are offered, covering topics that may not be offered on a regular basis. Prerequisites vary and are determined by topic. Extracting, transforming and analyzing data in myriad formats with traditional relational databases as well as non-relational databases. Data modeling, cloud databases, and API programming. Garnering insights using Python and current data analysis tools and libraries.",Topic: Computer Networks,Lecture,9217,Staff,Washington Square,
Special Topics: Agile Software Development and DevOps Algorithmic Problem Solving Collaborating Remotely: Build Software from Anywhe Computer Graphics Computer Networks Computer Vision Natural Language Processing Parallel Computing Principles of Programming Languages Social Networking,480,"Each semester, multiple special topics courses are offered, covering topics that may not be offered on a regular basis. Prerequisites vary and are determined by topic. Extracting, transforming and analyzing data in myriad formats with traditional relational databases as well as non-relational databases. Data modeling, cloud databases, and API programming. Garnering insights using Python and current data analysis tools and libraries.",Topic: Collaborating Remotely: Build Software from Anywhe,Lecture,8876,"Korth, Evan",Washington Square,SILV 411
Special Topics: Agile Software Development and DevOps Algorithmic Problem Solving Collaborating Remotely: Build Software from Anywhe Computer Graphics Computer Networks Computer Vision Natural Language Processing Parallel Computing Principles of Programming Languages Social Networking,480,"Each semester, multiple special topics courses are offered, covering topics that may not be offered on a regular basis. Prerequisites vary and are determined by topic. Extracting, transforming and analyzing data in myriad formats with traditional relational databases as well as non-relational databases. Data modeling, cloud databases, and API programming. Garnering insights using Python and current data analysis tools and libraries.",Topic: Agile Software Development and DevOps,Lecture,9515,"Bloomberg, Amos",Washington Square,SILV 405
Undergraduate Research,520,"The student will perform computer science research that is supervised by a faculty member actively engaged in research and which may lead to results publishable in the computer science literature. A substantial commitment to this work will be expected of the student. The research project may be one or two semesters, to be determined in consultation with the faculty supervisor. Students taking this course for honors credit will be required to write an honors thesis. All other students will need to submit a write-up of the research results at the conclusion of the project.",,Independent Study,7463,Staff,Washington Square,
Internship in Computer Science,897,"Restricted to declared computer science majors. Does not count toward the major or minor, but does count toward the CAS degree. Offered every semester. 1 to 4 credits. An internship in computer science is an excellent complement to formal course work. We strongly recommend that students have some practical training along with their classroom experience, so they can explore different career options and gain hands-on experience. An internship is for majors only, and students must have maintained an overall GPA of 3.0 and a computer science GPA of 3.5. The internship will be graded.",,Independent Study,8881,Staff,Washington Square,
Independent Study,997,"Prerequisite: Permission of the department. Students majoring in the department who have maintained a general average of 3.00 and an average of 3.50 in computer science and who, in the opinion of the department, have the ability and the need for work in topics not included in the listed courses are permitted to work on an individual basis, under the supervision of a member of the department. The independent study must be approved by the department at registration. Students are expected to spend about 3 to 6 hours a week on assigned projects for their study. The project must be scheduled for completion within the semester. ",,Independent Study,7464,Staff,Washington Square,
Artificial Intelligence,9472,"There are many cognitive tasks that people can do easily and almost unconsciously but that have proven extremely difficult to program on a computer. Artificial intelligence is the problem of developing computer systems that can carry out these tasks. We will focus on three central areas in AI: representation and reasoning, machine learning, and natural language processing.",,Lecture,22399,Staff,NYU Paris (Global),
Artificial Intelligence,9472,"There are many cognitive tasks that people can do easily and almost unconsciously but that have proven extremely difficult to program on a computer. Artificial intelligence is the problem of developing computer systems that can carry out these tasks. We will focus on three central areas in AI: representation and reasoning, machine learning, and natural language processing.",,Lecture,23192,"Clémençon, Stephan",NYU Paris (Global),PARI 410
Fundamentals of Machine Learning | Introduction to Machine Learning,9473,"Machine learning is an exciting and fast-moving field of computer science with many recent consumer applications (e.g., Microsoft Kinect, Google Translate, Iphone's Siri, digital camera face detection, Netflix recommendations, Google news) and applications within the sciences and medicine (e.g., predicting protein-protein interactions, species modeling, detecting tumors, personalized medicine). This course introduces undergraduate computer science students to the field of machine learning. Students learn about the theoretical foundations of machine learning and how to apply machine learning to solve new problems. Assuming no prior knowledge in machine learning, the course focuses on two major paradigms in machine learning which are supervised and unsupervised learning. In supervised learning, we learn various methods for classification and regression. Dimensionality reduction and clustering are discussed in the case of unsupervised learning ",,Lecture,22400,Staff,NYU Paris (Global),
Fundamentals of Machine Learning | Introduction to Machine Learning,9473,"Machine learning is an exciting and fast-moving field of computer science with many recent consumer applications (e.g., Microsoft Kinect, Google Translate, Iphone's Siri, digital camera face detection, Netflix recommendations, Google news) and applications within the sciences and medicine (e.g., predicting protein-protein interactions, species modeling, detecting tumors, personalized medicine). This course introduces undergraduate computer science students to the field of machine learning. Students learn about the theoretical foundations of machine learning and how to apply machine learning to solve new problems. Assuming no prior knowledge in machine learning, the course focuses on two major paradigms in machine learning which are supervised and unsupervised learning. In supervised learning, we learn various methods for classification and regression. Dimensionality reduction and clustering are discussed in the case of unsupervised learning ",,Lecture,23146,"Cosse, Augustin Marie Dominique",NYU Paris (Global),PARI 410
Data Management and Analysis,9479,"Students that successfully complete CSCI-UA 479 Data Management and Analysis are not eligible to take CSCI-UA 60 Database Design and Implementation. Extracting, transforming and analyzing data in myriad formats. Using traditional relational databases as well as non-relational databases to store, manipulate, and query data. Students will learn how to work with data by writing custom programs, creating queries, and using current data analysis tools and libraries… all on a wide array of data sets. Additional related topics will be covered, such as data modeling, cloud databases, and API programming. ",,Lecture,22401,Staff,NYU Paris (Global),
Data Management and Analysis,9479,"Students that successfully complete CSCI-UA 479 Data Management and Analysis are not eligible to take CSCI-UA 60 Database Design and Implementation. Extracting, transforming and analyzing data in myriad formats. Using traditional relational databases as well as non-relational databases to store, manipulate, and query data. Students will learn how to work with data by writing custom programs, creating queries, and using current data analysis tools and libraries… all on a wide array of data sets. Additional related topics will be covered, such as data modeling, cloud databases, and API programming. ",,Lecture,23190,"Matiturke Shankara Narayana, Anantha Padmanabha",NYU Paris (Global),PARI 613
